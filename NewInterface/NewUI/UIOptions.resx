<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="fontDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB/AAACuFUAErhVABJ/AAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAfwAAAsJVAD/BVQCWwVUAlsJVAD9/AAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4VQASwVUAlsFWAPXBVgD1wVUAlrhVABIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAfwAAArhVABK4VQASfwAAAgAAAAAAAAAAAAAAALhVABLBVQCWwVYA9sFWAPbBVQCWuFUAEgAA
        AAAAAAAAAAAAAH8AAAK4VQASuFUAEn8AAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AJbCVQA/fwAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfwAAArhV
        ABK4VQASfwAAAgAAAAAAAAAAAAAAALhVABLBVQCWwVYA9sFWAPbBVQCWuFUAEgAAAAAAAAAAAAAAAH8A
        AAK4VQASuFUAEn8AAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuFUAEsFVAJbBVgD1wVYA9cFVAJa4VQASAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/AAACwlUAP8FVAJbBVQCWwlUAP38A
        AAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/AAACuFUAErhV
        ABJ/AAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////////////5////8P////D///n5+f/w//D/8P/w//j/8f//f
        +///7/f///fv///73//z/D/P4fw/h+H8P4fz/D/P//vf///37///7/f//9/7//4//H/8P/w//D/8P/5+
        fn///D////w////+f/////////////////8=
</value>
  </data>
</root>